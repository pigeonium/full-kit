version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: pigeonium_db
    restart: always
    environment:
      MYSQL_DATABASE: pigeonium
      MYSQL_USER: pigeonium
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: rootpassword
    volumes:
      - ./server/pigeonium.sql:/docker-entrypoint-initdb.d/init.sql
      - db_data:/var/lib/mysql
    networks:
      - pigeonium-net
    healthcheck:
      test: ["CMD", "mysql", "--database=pigeonium", "--user=pigeonium", "--password=password", "-e", "SELECT 1;"]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 30s

  api:
    build:
      context: .
      dockerfile: api.Dockerfile
    container_name: pigeonium_api
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "14540:14540"
    networks:
      - pigeonium-net
    environment:
      MYSQL_HOST: db
      ADMIN_PRV_KEY: 3d8ab89e855ec3afe8a83e3881a6ed1a392b672fba0ba4f3c0dce882a6bfc6f5
      ADMIN_PUB_KEY: 5e99927233c52dd75f3e544b8a4649f481fc03239e5f8e193c30d2c70eba4272c765145e3bcfa05ace3bfcc2830ae91a8a66a39584e6eff4b3fca31882233835
      BASE_CU_ISSUER: 123456120fd55b5a639c60a2f62612c2

  explorer:
    build:
      context: .
      dockerfile: explorer.Dockerfile
    container_name: pigeonium_explorer
    restart: always
    ports:
      - "14543:80"
    depends_on:
      - api
    networks:
      - pigeonium-net

networks:
  pigeonium-net:
    driver: bridge

volumes:
  db_data:
